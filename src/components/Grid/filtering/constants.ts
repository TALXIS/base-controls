import { DatasetConditionOperator } from "../core/enums/ConditionOperator";

export const OPERATORS = [
    { type: DatasetConditionOperator.None, key: 'condition-none' },
    { type: DatasetConditionOperator.Equal, key: 'condition-equal' },
    { type: DatasetConditionOperator.NotEqual, key: 'condition-notequal' },
    { type: DatasetConditionOperator.GreaterThan, key: 'condition-greaterthan' },
    { type: DatasetConditionOperator.LessThan, key: 'condition-lessthan' },
    { type: DatasetConditionOperator.GreaterEqual, key: 'condition-greaterequal' },
    { type: DatasetConditionOperator.LessEqual, key: 'condition-lessequal' },
    { type: DatasetConditionOperator.Like, key: 'condition-like' },
    { type: DatasetConditionOperator.NotLike, key: 'condition-notlike' },
    { type: DatasetConditionOperator.In, key: 'condition-in' },
    { type: DatasetConditionOperator.NotIn, key: 'condition-notin' },
    { type: DatasetConditionOperator.Between, key: 'condition-between' },
    { type: DatasetConditionOperator.NotBetween, key: 'condition-notbetween' },
    { type: DatasetConditionOperator.Null, key: 'condition-null' },
    { type: DatasetConditionOperator.NotNull, key: 'condition-notnull' },
    { type: DatasetConditionOperator.Yesterday, key: 'condition-yesterday' },
    { type: DatasetConditionOperator.Today, key: 'condition-today' },
    { type: DatasetConditionOperator.Tomorrow, key: 'condition-tomorrow' },
    { type: DatasetConditionOperator.Last7Days, key: 'condition-last7days' },
    { type: DatasetConditionOperator.Next7Days, key: 'condition-next7days' },
    { type: DatasetConditionOperator.LastWeek, key: 'condition-lastweek' },
    { type: DatasetConditionOperator.ThisWeek, key: 'condition-thisweek' },
    { type: DatasetConditionOperator.LastMonth, key: 'condition-lastmonth' },
    { type: DatasetConditionOperator.ThisMonth, key: 'condition-thismonth' },
    { type: DatasetConditionOperator.On, key: 'condition-on' },
    { type: DatasetConditionOperator.OnOrBefore, key: 'condition-onorbefore' },
    { type: DatasetConditionOperator.OnOrAfter, key: 'condition-onorafter' },
    { type: DatasetConditionOperator.LastYear, key: 'condition-lastyear' },
    { type: DatasetConditionOperator.ThisYear, key: 'condition-thisyear' },
    { type: DatasetConditionOperator.LastXDays, key: 'condition-lastxdays' },
    { type: DatasetConditionOperator.NextXDays, key: 'condition-nextxdays' },
    { type: DatasetConditionOperator.LastXMonths, key: 'condition-lastxmonths' },
    { type: DatasetConditionOperator.NextXMonths, key: 'condition-nextxmonths' },
    { type: DatasetConditionOperator.Contains, key: 'condition-contains' },
    { type: DatasetConditionOperator.BeginWith, key: 'condition-beginwith' },
    { type: DatasetConditionOperator.DoesNotBeginWith, key: 'condition-doesnotbeginwith' },
    { type: DatasetConditionOperator.EndsWith, key: 'condition-endswith' },
    { type: DatasetConditionOperator.DoesNotEndWith, key: 'condition-doesnotendwith' },
    { type: DatasetConditionOperator.InFiscalPeriodAndYear, key: 'condition-infiscalperiodandyear' },
    { type: DatasetConditionOperator.Above, key: 'condition-above' },
    { type: DatasetConditionOperator.Under, key: 'condition-under' },
    { type: DatasetConditionOperator.NotUnder, key: 'condition-notunder' },
    { type: DatasetConditionOperator.AboveOrEqual, key: 'condition-aboveorequal' },
    { type: DatasetConditionOperator.UnderOrEqual, key: 'condition-underorequal' },
    { type: DatasetConditionOperator.ContainValues, key: 'condition-containvalues' },
    { type: DatasetConditionOperator.DoesNotContainValues, key: 'condition-doesnotcontainvalues' }, // Added missing operator
];